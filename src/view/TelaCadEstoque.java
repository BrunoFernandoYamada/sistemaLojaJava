package view;

import util.CampoLimiter;
import dao.EntradaDAO;
import dao.FornecedorDAO;
import dominio.Entrada;
import dominio.Fornecedor;
import dominio.ItemEntrada;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class TelaCadEstoque extends javax.swing.JPanel {

    /**
     * Creates new form TelaCadEstoque
     */
    public TelaCadEstoque() {
        initComponents();

        this.atualizarCB();

        //Limitando tamanho dos campos
        txtNotafiscal.setDocument(new CampoLimiter(10));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton6 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtNotafiscal = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        dataEntrada = new com.toedter.calendar.JDateChooser();
        cbfornecedores = new javax.swing.JComboBox<>();
        jButton9 = new javax.swing.JButton();
        btnAtualizarCB = new javax.swing.JButton();
        lbProdutos = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbEntradas = new javax.swing.JTable();
        btnVisualizarEntrada = new javax.swing.JButton();
        btnAlterarEntrada = new javax.swing.JButton();
        btnRemoverEntrada = new javax.swing.JButton();
        btnAlterarItens = new javax.swing.JButton();
        btnCadastrarEntrada = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setFocusCycleRoot(true);

        jButton6.setBackground(java.awt.Color.darkGray);
        jButton6.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("Limpar");
        jButton6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton6.setFocusable(false);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dados do produto", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 12))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel2.setText("Fornecedor*");

        txtNotafiscal.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel4.setText("Nº nota fiscal*");

        jLabel9.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel9.setText("Data entrada*");

        cbfornecedores.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cbfornecedores.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione um fornecedor" }));
        cbfornecedores.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cbfornecedores.setFocusable(false);
        cbfornecedores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbfornecedoresActionPerformed(evt);
            }
        });

        jButton9.setBackground(java.awt.Color.darkGray);
        jButton9.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jButton9.setForeground(new java.awt.Color(255, 255, 255));
        jButton9.setText("Adicionar Fornecedor");
        jButton9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton9.setFocusable(false);
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        btnAtualizarCB.setBackground(new java.awt.Color(255, 255, 255));
        btnAtualizarCB.setForeground(new java.awt.Color(255, 255, 255));
        btnAtualizarCB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/imagem_refresh-81af31e9952439f554065f03d6febaf7.png"))); // NOI18N
        btnAtualizarCB.setBorder(null);
        btnAtualizarCB.setBorderPainted(false);
        btnAtualizarCB.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAtualizarCB.setFocusable(false);
        btnAtualizarCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarCBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel9)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(dataEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbfornecedores, 0, 350, Short.MAX_VALUE)
                            .addComponent(txtNotafiscal))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAtualizarCB, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton9, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnAtualizarCB, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbfornecedores, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(dataEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNotafiscal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(166, 166, 166))
        );

        lbProdutos.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        lbProdutos.setText("Entradas");

        tbEntradas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código da Entrada", "Nota Fiscal", "Fornecedor", "Data da Entrada"
            }
        ));
        tbEntradas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tbEntradasMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tbEntradas);

        btnVisualizarEntrada.setBackground(java.awt.Color.darkGray);
        btnVisualizarEntrada.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnVisualizarEntrada.setForeground(new java.awt.Color(255, 255, 255));
        btnVisualizarEntrada.setText("Consultar Entradas");
        btnVisualizarEntrada.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnVisualizarEntrada.setFocusable(false);
        btnVisualizarEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVisualizarEntradaActionPerformed(evt);
            }
        });

        btnAlterarEntrada.setBackground(java.awt.Color.darkGray);
        btnAlterarEntrada.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnAlterarEntrada.setForeground(new java.awt.Color(255, 255, 255));
        btnAlterarEntrada.setText("Alterar entrada");
        btnAlterarEntrada.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAlterarEntrada.setFocusable(false);
        btnAlterarEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarEntradaActionPerformed(evt);
            }
        });

        btnRemoverEntrada.setBackground(java.awt.Color.darkGray);
        btnRemoverEntrada.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnRemoverEntrada.setForeground(new java.awt.Color(255, 255, 255));
        btnRemoverEntrada.setText("Remover entrada");
        btnRemoverEntrada.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRemoverEntrada.setFocusable(false);
        btnRemoverEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverEntradaActionPerformed(evt);
            }
        });

        btnAlterarItens.setBackground(java.awt.Color.darkGray);
        btnAlterarItens.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnAlterarItens.setForeground(new java.awt.Color(255, 255, 255));
        btnAlterarItens.setText("Alterar itens");
        btnAlterarItens.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAlterarItens.setFocusable(false);
        btnAlterarItens.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarItensActionPerformed(evt);
            }
        });

        btnCadastrarEntrada.setBackground(java.awt.Color.darkGray);
        btnCadastrarEntrada.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnCadastrarEntrada.setForeground(new java.awt.Color(255, 255, 255));
        btnCadastrarEntrada.setText("Inserir entrada");
        btnCadastrarEntrada.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCadastrarEntrada.setFocusable(false);
        btnCadastrarEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarEntradaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(115, 115, 115)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnVisualizarEntrada, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnCadastrarEntrada)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAlterarEntrada)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAlterarItens)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRemoverEntrada)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 163, Short.MAX_VALUE)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)))
                .addGap(115, 115, 115))
            .addGroup(layout.createSequentialGroup()
                .addGap(458, 458, 458)
                .addComponent(lbProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(lbProdutos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnVisualizarEntrada)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(btnRemoverEntrada)
                    .addComponent(btnAlterarItens)
                    .addComponent(btnAlterarEntrada)
                    .addComponent(btnCadastrarEntrada))
                .addGap(37, 37, 37))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed

        JFrame tela = new JFrame();
        tela.setSize(1190, 630);
        TelaCadFornecedor telafoCadFornecedor = new TelaCadFornecedor();
        tela.add(telafoCadFornecedor);

        JDialog dia = new JDialog();
        dia.setModal(true);
        dia.setSize(1190, 630);
        dia.setContentPane(tela.getContentPane());
        dia.setLocationRelativeTo(null);
        dia.setVisible(true);

    }//GEN-LAST:event_jButton9ActionPerformed

    private void btnCadastrarEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarEntradaActionPerformed

        String notafiscal = txtNotafiscal.getText(); 
        
        EntradaDAO entradaDAO = new EntradaDAO();
        Entrada entradaInserir = new Entrada();
        entradaInserir = entradaDAO.buscaPorNota(notafiscal);
        
        if(entradaInserir == null){
       
        
        if (verificarCampos()) {

            
            Entrada entrada = new Entrada();
            FornecedorDAO fornecedorDAO = new FornecedorDAO();

            Fornecedor fornecedor = fornecedorDAO.buscarPorRazao(cbfornecedores.getSelectedItem().toString());
            entrada.setCodFornecedor(fornecedor);
            entrada.setDataEntrada(dataEntrada.getDate());
            entrada.setNotafiscal(txtNotafiscal.getText());
            String tipo = "inc";
            TelaItensEntrada tie = new TelaItensEntrada(entrada, tipo);
            tie.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Preencha os campos obrigatórios");
        }
        this.atualizatTB();
        
        }else{
            JOptionPane.showMessageDialog(null, "Uma entrada com a nota fiscal digitada já foi incluída \n         se necessário realize uma alteração");
        }
    }//GEN-LAST:event_btnCadastrarEntradaActionPerformed

    private void btnAlterarEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarEntradaActionPerformed

        int linha = tbEntradas.getSelectedRow();
        if (linha == -1) {
            JOptionPane.showMessageDialog(null, "Selecione uma entrada na tabela pra alterar");
        } else if (verificarCampos()) {
            Integer cod = Integer.parseInt(tbEntradas.getModel().getValueAt(linha, 0).toString());

            FornecedorDAO fornecedorDAO = new FornecedorDAO();
            Fornecedor fornecedor = fornecedorDAO.buscarPorRazao(cbfornecedores.getSelectedItem().toString());

            Entrada entrada = new Entrada();
            EntradaDAO entradaDAO = new EntradaDAO();

            entrada.setCodFornecedor(fornecedor);
            entrada.setDataEntrada(dataEntrada.getDate());
            entrada.setNotafiscal(txtNotafiscal.getText());

            entradaDAO.editar(entrada);

            JOptionPane.showMessageDialog(null, "Entrada Alterado com sucesso com sucesso!");
            this.limparCampos();
            int opc = JOptionPane.showConfirmDialog(null, "Deseja realmente alterar a entrada?", "Confirmação de alteração", JOptionPane.YES_NO_OPTION);
            if(opc == JOptionPane.YES_OPTION){
                String tipo = "inc";
                TelaItensEntrada tie = new TelaItensEntrada(entrada, tipo);
                tie.setVisible(true);
            }
        }
        this.atualizatTB();
    }//GEN-LAST:event_btnAlterarEntradaActionPerformed

    private void btnRemoverEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverEntradaActionPerformed
        int linha = tbEntradas.getSelectedRow();

        if (linha == -1) {
            JOptionPane.showMessageDialog(null, "Selecione uma entrada na tabela pra remover");
        } else {

            int opc = JOptionPane.showConfirmDialog(null, "Deseja realmente excluir a entrada?", "Confirmação de Exclusão", JOptionPane.YES_NO_OPTION);
            Integer cod = Integer.parseInt(tbEntradas.getModel().getValueAt(linha, 0).toString());

            if (opc == JOptionPane.YES_OPTION) {
                EntradaDAO entradaDAO = new EntradaDAO();
                Entrada entrada = entradaDAO.buscar(cod);
                entradaDAO.excluir(entrada);
                JOptionPane.showMessageDialog(null, "Entrada excluída com sucesso!");
            }
        }

        this.atualizatTB();

    }//GEN-LAST:event_btnRemoverEntradaActionPerformed

    private void cbfornecedoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbfornecedoresActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbfornecedoresActionPerformed

    private void btnVisualizarEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVisualizarEntradaActionPerformed
        this.atualizatTB();
    }//GEN-LAST:event_btnVisualizarEntradaActionPerformed

    private void btnAlterarItensActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarItensActionPerformed

        int linha = tbEntradas.getSelectedRow();
        if (linha == -1) {
            JOptionPane.showMessageDialog(null, "Selecione uma entrada na tabela para alterar os itens");
        } else {
            Integer cod = Integer.parseInt(tbEntradas.getModel().getValueAt(linha, 0).toString());
            Entrada entrada = new Entrada();
            entrada.setCodEntrada(cod);
            String tipo = "alt";
            TelaItensEntrada tie = new TelaItensEntrada(entrada, tipo);
            tie.setVisible(true);
        }

    }//GEN-LAST:event_btnAlterarItensActionPerformed

    private void btnAtualizarCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarCBActionPerformed
        cbfornecedores.removeAllItems();
        cbfornecedores.addItem("Selecione um fornecedor");
        this.atualizarCB();
    }//GEN-LAST:event_btnAtualizarCBActionPerformed

    private void tbEntradasMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbEntradasMousePressed

        int linha = tbEntradas.getSelectedRow();

        txtNotafiscal.setText(tbEntradas.getModel().getValueAt(linha, 1).toString());
        cbfornecedores.setSelectedItem(tbEntradas.getModel().getValueAt(linha, 2).toString());

        Date data = null;

        try {
            data = new SimpleDateFormat("yyyy-MM-dd").parse(tbEntradas.getModel().getValueAt(linha, 3).toString());
        } catch (ParseException ex) {
            Logger.getLogger(TelaCadEstoque.class.getName()).log(Level.SEVERE, null, ex);
        }
        dataEntrada.setDate(data);

    }//GEN-LAST:event_tbEntradasMousePressed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        this.limparCampos();
    }//GEN-LAST:event_jButton6ActionPerformed

    public void limparCampos() {
        cbfornecedores.setSelectedIndex(0);
        txtNotafiscal.setText(null);
        dataEntrada.setDate(null);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterarEntrada;
    private javax.swing.JButton btnAlterarItens;
    private javax.swing.JButton btnAtualizarCB;
    private javax.swing.JButton btnCadastrarEntrada;
    private javax.swing.JButton btnRemoverEntrada;
    private javax.swing.JButton btnVisualizarEntrada;
    private javax.swing.JComboBox<String> cbfornecedores;
    private com.toedter.calendar.JDateChooser dataEntrada;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbProdutos;
    private javax.swing.JTable tbEntradas;
    private javax.swing.JTextField txtNotafiscal;
    // End of variables declaration//GEN-END:variables

    private void carregarTabelaEntrada(List<Entrada> entradaLista) {

        String[] colunaTabela = new String[]{"Código da Entrada", "Nota Fiscal", "Fornecedor", "Data da Entrada"};

        DefaultTableModel modeloTabela = new DefaultTableModel(null, colunaTabela) {

            public boolean isCellEditable(int row, int col) {
                return false;
            }
        };

        tbEntradas.setModel(modeloTabela);

        for (Entrada entrada : entradaLista) {
            modeloTabela.addRow(new String[]{entrada.getCodEntrada().toString(), entrada.getNotafiscal(),
                entrada.getCodFornecedor().getRazaoSocial().toString(), entrada.getDataEntrada().toString()});
        }

    }

    private boolean verificarCampos() {
        if (cbfornecedores.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Selecione um Fornecedor para a Entrada");
            return false;
        }
        if ((dataEntrada.getDate() == null) || (txtNotafiscal.getText().isEmpty())) {
            JOptionPane.showMessageDialog(null, "Preencha os campos Obrigatórios!");
            return false;
        } else {

            return true;
        }
    }

    public void atualizarCB() {

        FornecedorDAO fornecedorDAO = new FornecedorDAO();
        List<Fornecedor> fornecedores = fornecedorDAO.listar();

        for (Fornecedor fornecedor : fornecedores) {

            cbfornecedores.addItem(fornecedor.getRazaoSocial());
        }
    }

    public void atualizatTB() {
        EntradaDAO entradaDAO = new EntradaDAO();
        List<Entrada> entradaLista = entradaDAO.listar();
        carregarTabelaEntrada(entradaLista);
    }
    
}
