/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import util.CampoLimiter;
import util.JNumberFormatField;
import dao.EntradaDAO;
import dao.ItemEntradaDAO;
import dao.ProdutoDAO;
import dominio.Entrada;
import dominio.ItemEntrada;
import dominio.Produto;
import java.text.DecimalFormat;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static view.TelaInicial.telaCadEstoque;

/**
 *
 * @author Willian
 */
public class TelaItensEntrada extends javax.swing.JFrame {

    /**
     * Creates new form TelaItensEntrada
     */
    int linha = 0;
    public static Entrada codentrada;
    public static String nometipo;

    public TelaItensEntrada(Entrada entrada, String tipo) {

        initComponents();
        this.atualizarCB();

        codentrada = entrada;
        nometipo = tipo;

        if (tipo == "alt") {

            Integer codigo = codentrada.getCodEntrada();
            ItemEntradaDAO ieDAO = new ItemEntradaDAO();
            List<ItemEntrada> itementradas = ieDAO.listarPorCodigo(codigo);
            this.carregarTabelaItemEntrada(itementradas);
            this.atualizatTB();
            //btnCadastrarEntrada.setEnabled(false);

        } else {
            tipo = "inc";
        }

        //Limitando tamanho dos campos
        txtQuantidade.setDocument(new CampoLimiter(3));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnConcluir = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        cbprodutos = new javax.swing.JComboBox<>();
        txtQuantidade = new javax.swing.JTextField();
        btnAdicionarItens = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        txtPrecoCusto = new JNumberFormatField(new DecimalFormat("R$ 0.00")){
            {
                setLimit(9);
            }
        };
        lbProdutos = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbItemEntradas = new javax.swing.JTable();
        btnCadastrarEntrada = new javax.swing.JButton();
        btnAlterarEntrada = new javax.swing.JButton();
        btnRemoverEntrada = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setFocusCycleRoot(true);
        jPanel1.setPreferredSize(new java.awt.Dimension(775, 573));

        btnConcluir.setBackground(java.awt.Color.darkGray);
        btnConcluir.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnConcluir.setForeground(new java.awt.Color(255, 255, 255));
        btnConcluir.setText("Concluir");
        btnConcluir.setCursor(new java.awt.Cursor(java.awt.Cursor.NW_RESIZE_CURSOR));
        btnConcluir.setFocusable(false);
        btnConcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConcluirActionPerformed(evt);
            }
        });

        jButton6.setBackground(java.awt.Color.darkGray);
        jButton6.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("Limpar");
        jButton6.setCursor(new java.awt.Cursor(java.awt.Cursor.NW_RESIZE_CURSOR));
        jButton6.setFocusable(false);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dados do produto", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 12))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel2.setText("Produto*");

        jLabel4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel4.setText("Preço unit*");

        jLabel9.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel9.setText("Quantidade*");

        cbprodutos.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cbprodutos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione um produto" }));
        cbprodutos.setCursor(new java.awt.Cursor(java.awt.Cursor.NW_RESIZE_CURSOR));
        cbprodutos.setFocusable(false);

        btnAdicionarItens.setBackground(java.awt.Color.darkGray);
        btnAdicionarItens.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnAdicionarItens.setForeground(new java.awt.Color(255, 255, 255));
        btnAdicionarItens.setText("+");
        btnAdicionarItens.setCursor(new java.awt.Cursor(java.awt.Cursor.NW_RESIZE_CURSOR));
        btnAdicionarItens.setFocusable(false);
        btnAdicionarItens.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarItensActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel1.setText("Adicionar item à lista");

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/imagem_refresh-81af31e9952439f554065f03d6febaf7.png"))); // NOI18N
        jButton1.setBorder(null);
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.NW_RESIZE_CURSOR));
        jButton1.setFocusable(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        txtPrecoCusto.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel9)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(cbprodutos, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtQuantidade, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                            .addComponent(txtPrecoCusto))
                        .addGap(18, 18, 18)
                        .addComponent(btnAdicionarItens)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbprodutos, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(btnAdicionarItens)
                    .addComponent(jLabel1)
                    .addComponent(txtPrecoCusto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(175, 175, 175))
        );

        lbProdutos.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        lbProdutos.setText("Itens da Entrada");

        tbItemEntradas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código do Item", "Código do Produto", "Produto", "Quantidade", "Preço"
            }
        ));
        tbItemEntradas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tbItemEntradasMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tbItemEntradas);

        btnCadastrarEntrada.setBackground(java.awt.Color.darkGray);
        btnCadastrarEntrada.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnCadastrarEntrada.setForeground(new java.awt.Color(255, 255, 255));
        btnCadastrarEntrada.setText("Salvar");
        btnCadastrarEntrada.setCursor(new java.awt.Cursor(java.awt.Cursor.NW_RESIZE_CURSOR));
        btnCadastrarEntrada.setFocusable(false);
        btnCadastrarEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarEntradaActionPerformed(evt);
            }
        });

        btnAlterarEntrada.setBackground(java.awt.Color.darkGray);
        btnAlterarEntrada.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnAlterarEntrada.setForeground(new java.awt.Color(255, 255, 255));
        btnAlterarEntrada.setText("Alterar");
        btnAlterarEntrada.setCursor(new java.awt.Cursor(java.awt.Cursor.NW_RESIZE_CURSOR));
        btnAlterarEntrada.setFocusable(false);
        btnAlterarEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarEntradaActionPerformed(evt);
            }
        });

        btnRemoverEntrada.setBackground(java.awt.Color.darkGray);
        btnRemoverEntrada.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnRemoverEntrada.setForeground(new java.awt.Color(255, 255, 255));
        btnRemoverEntrada.setText("Remover");
        btnRemoverEntrada.setCursor(new java.awt.Cursor(java.awt.Cursor.NW_RESIZE_CURSOR));
        btnRemoverEntrada.setFocusable(false);
        btnRemoverEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverEntradaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(72, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGap(251, 251, 251)
                                .addComponent(lbProdutos))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 647, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 1, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnCadastrarEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnAlterarEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnRemoverEntrada)
                        .addGap(95, 95, 95)
                        .addComponent(btnConcluir)
                        .addGap(18, 18, 18)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(55, 55, 55))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(lbProdutos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 22, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCadastrarEntrada)
                    .addComponent(btnAlterarEntrada)
                    .addComponent(btnRemoverEntrada)
                    .addComponent(btnConcluir)
                    .addComponent(jButton6))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 595, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCadastrarEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarEntradaActionPerformed

        if (tbItemEntradas.getRowCount() > 0) {
            
            EntradaDAO entradaDAO = new EntradaDAO();
            entradaDAO.inserir(codentrada);

            for (int i = 0; i < tbItemEntradas.getRowCount(); i++) {

                ProdutoDAO produtoDAO = new ProdutoDAO();
                Produto produto = produtoDAO.buscarPorNome(tbItemEntradas.getValueAt(i, 2).toString());

                String quantidade = tbItemEntradas.getValueAt(i, 3).toString();
                String preco = tbItemEntradas.getValueAt(i, 4).toString();
                preco = preco.replace("R$", "");
                preco = preco.replace(",", ".");

                Integer qtd = produto.getQtdEstoque();
                if(qtd == null){
                    qtd = 0; 
                }
                produto.setQtdEstoque(qtd + Integer.parseInt(quantidade));
                
                ItemEntrada ie = new ItemEntrada();
                ItemEntradaDAO ieDAO = new ItemEntradaDAO();

                ie.setCodEntrada(codentrada);
                ie.setCodProduto(produto);
                ie.setQuantidade(Integer.parseInt(quantidade));
                
                
                
                ie.setPrecoCusto(Float.parseFloat(preco));

                ieDAO.inserir(ie);
                produtoDAO.editar(produto);
                JOptionPane.showMessageDialog(rootPane, "Os itens foram incluídos com sucesso", "Concluído", 1);
                this.dispose();
                telaCadEstoque.limparCampos();

            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Insira pelo menos um item para salvar a entrada", "Erro", 3);
        }

    }//GEN-LAST:event_btnCadastrarEntradaActionPerformed

    private void btnAlterarEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarEntradaActionPerformed

        if (verificarCampos()) {
            for (int i = 0; i < tbItemEntradas.getRowCount(); i++) {

                ProdutoDAO produtoDAO = new ProdutoDAO();
                Produto produto = produtoDAO.buscarPorNome(tbItemEntradas.getValueAt(i, 1).toString());

                String quantidade = tbItemEntradas.getValueAt(i, 2).toString();
                String preco = tbItemEntradas.getValueAt(i, 3).toString();
                
                int qtd = produto.getQtdEstoque();
                produto.setQtdEstoque(qtd + Integer.parseInt(quantidade));

                Entrada entrada = new Entrada();
                EntradaDAO entradaDAO = new EntradaDAO();
                
                ItemEntrada ie = new ItemEntrada();
                ItemEntradaDAO ieDAO = new ItemEntradaDAO();
                
                ie.setCodEntrada(codentrada);
                ie.setCodProduto(produto);
                ie.setQuantidade(Integer.parseInt(quantidade));
                ie.setPrecoCusto(Float.parseFloat(preco));

                ieDAO.editar(ie);
                entradaDAO.editar(entrada);
                
                produtoDAO.editar(produto);

                JOptionPane.showMessageDialog(rootPane, "Item alterado com sucesso", "Concluido", 1);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Preencha os campos corretamente", "Erro", 3);
        }
        this.atualizatTB();
    }//GEN-LAST:event_btnAlterarEntradaActionPerformed

    private void btnAdicionarItensActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarItensActionPerformed

        String produtonome = cbprodutos.getSelectedItem().toString();
        String quantidade = txtQuantidade.getText().trim();
        String preco = txtPrecoCusto.getText().trim();
        
        ProdutoDAO produtoDAO = new ProdutoDAO();
        Produto produto = produtoDAO.buscarPorNome(produtonome);
        String prod = produto.getCodProduto().toString();

        DefaultTableModel val = (DefaultTableModel) tbItemEntradas.getModel();

        val.addRow(new String[]{ "", prod, produtonome, quantidade, preco});
        this.limparCampos();

        cbprodutos.requestFocus();

    }//GEN-LAST:event_btnAdicionarItensActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        cbprodutos.removeAllItems();
        cbprodutos.addItem("Selecione um produto");
        this.atualizarCB();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tbItemEntradasMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbItemEntradasMousePressed
        int linha = tbItemEntradas.getSelectedRow();

        cbprodutos.setSelectedItem(tbItemEntradas.getModel().getValueAt(linha, 2).toString());
        txtQuantidade.setText(tbItemEntradas.getModel().getValueAt(linha, 3).toString());
        txtPrecoCusto.setText(tbItemEntradas.getModel().getValueAt(linha, 4).toString());

    }//GEN-LAST:event_tbItemEntradasMousePressed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        this.limparCampos();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void btnConcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConcluirActionPerformed

        if (tbItemEntradas.getRowCount() == 0){
            JOptionPane.showMessageDialog(null, "A entrada foi salva sem itens!");
            this.dispose();
        }else{
            int opc = JOptionPane.showConfirmDialog(null, "Deseja incluir os itens na entrada?", "Atenção", JOptionPane.YES_NO_OPTION);
            if (opc == JOptionPane.YES_OPTION) {
                this.salvarLista();
                this.dispose();
            }else{
                EntradaDAO entradaDAO = new EntradaDAO();
                entradaDAO.excluir(codentrada);
                this.dispose();
            }
        }
    }//GEN-LAST:event_btnConcluirActionPerformed

    private void btnRemoverEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverEntradaActionPerformed
        
        int linha = tbItemEntradas.getSelectedRow();
        if (linha == -1) {
            JOptionPane.showMessageDialog(null, "Selecione um Item na tabela para remover");
        } else if (verificarCampos()) {
            Integer cod = Integer.parseInt(tbItemEntradas.getModel().getValueAt(linha, 0).toString());
            Integer codprod = Integer.parseInt(tbItemEntradas.getModel().getValueAt(linha, 1).toString());
            
            String quantidade = tbItemEntradas.getValueAt(linha, 3).toString();

            ItemEntradaDAO ieDAO = new ItemEntradaDAO();
            ItemEntrada ie = ieDAO.buscar(cod);
            
            ProdutoDAO produtoDAO = new ProdutoDAO();
            Produto produto = produtoDAO.buscar(codprod);
            
            System.out.println();
            
            produto.setQtdEstoque(produto.getQtdEstoque() - Integer.parseInt(quantidade));
            produtoDAO.editar(produto);
            
            List<ItemEntrada> itemEntradaLista = ieDAO.listar();
            ieDAO.excluir(ie);

            

            JOptionPane.showMessageDialog(null, "Item removido com sucesso!");
            this.atualizatTB();
        }
        this.atualizatTB();
    }//GEN-LAST:event_btnRemoverEntradaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaItensEntrada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaItensEntrada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaItensEntrada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaItensEntrada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaItensEntrada(codentrada, nometipo).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionarItens;
    private javax.swing.JButton btnAlterarEntrada;
    private javax.swing.JButton btnCadastrarEntrada;
    private javax.swing.JButton btnConcluir;
    private javax.swing.JButton btnRemoverEntrada;
    private javax.swing.JComboBox<String> cbprodutos;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbProdutos;
    private javax.swing.JTable tbItemEntradas;
    private javax.swing.JTextField txtPrecoCusto;
    private javax.swing.JTextField txtQuantidade;
    // End of variables declaration//GEN-END:variables

    private boolean verificarCampos() {
        if (cbprodutos.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Selecione um Produto");
            return false;
        }
        if ((txtQuantidade.getText().isEmpty()) || (txtPrecoCusto.getText().isEmpty())) {
            JOptionPane.showMessageDialog(null, "Preencha os campos Obrigatórios!");
            return false;
        } else {

            return true;
        }
    }

    private void limparCampos() {

        cbprodutos.setSelectedIndex(0);
        txtPrecoCusto.setText(null);
        txtQuantidade.setText(null);

    }

    private void carregarTabelaItemEntrada(List<ItemEntrada> itemEntradaLista) {

        String[] colunaTabela = new String[]{"Código do item", "Código do produto","Nome do Produto", "Quantidade", "Preço"};

        DefaultTableModel modeloTabela = new DefaultTableModel(null, colunaTabela) {

            public boolean isCellEditable(int row, int col) {
                return false;
            }
        };
        
        DecimalFormat formater = new DecimalFormat("0.00");

        tbItemEntradas.setModel(modeloTabela);

        for (ItemEntrada ie : itemEntradaLista) {
            modeloTabela.addRow(new String[]{ie.getCodItem().toString(), ie.getCodProduto().getCodProduto().toString(),
                ie.getCodProduto().getNomeProduto(),ie.getQuantidade().toString(), 
                formater.format(ie.getPrecoCusto())});
        }

    }

    public void atualizarCB() {

        ProdutoDAO produtoDAO = new ProdutoDAO();
        List<Produto> produtos = produtoDAO.listar();

        for (Produto produto : produtos) {

            cbprodutos.addItem(produto.getNomeProduto());
        }
    }

    public void atualizatTB() {
        ItemEntradaDAO ieDAO = new ItemEntradaDAO();
        List<ItemEntrada> ieLista = ieDAO.listar();
        carregarTabelaItemEntrada(ieLista);
    }

    private void salvarLista() {
        
        EntradaDAO entradaDAO = new EntradaDAO();
        entradaDAO.inserir(codentrada);
        
            for (int i = 0; i < tbItemEntradas.getRowCount(); i++) {

                ProdutoDAO produtoDAO = new ProdutoDAO();
                Produto produto = produtoDAO.buscarPorNome(tbItemEntradas.getValueAt(i, 1).toString());

                String quantidade = tbItemEntradas.getValueAt(i, 2).toString();
                String preco = tbItemEntradas.getValueAt(i, 3).toString();

                int qtd = produto.getQtdEstoque();
                System.out.println(produto.getQtdEstoque());
                produto.setQtdEstoque(qtd + Integer.parseInt(quantidade));

                ItemEntrada ie = new ItemEntrada();
                ItemEntradaDAO ieDAO = new ItemEntradaDAO();

                ie.setCodEntrada(codentrada);
                ie.setCodProduto(produto);
                ie.setQuantidade(Integer.parseInt(quantidade));
                ie.setPrecoCusto(Float.parseFloat(preco));

                ieDAO.inserir(ie);
                produtoDAO.editar(produto);
                JOptionPane.showMessageDialog(rootPane, "Os itens foram incluídos com sucesso", "Concluído", 1);
                this.dispose();

            }
    }
}